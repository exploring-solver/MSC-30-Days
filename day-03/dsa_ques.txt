climbing_stairs
class Solution {
public:
    int climbStairs(int n) {
        if(n<=2)
         return n;
        vector<int> dp(n+1);
        dp[0]=0;
        dp[1]=1;
        dp[2]=2;
        for(int i=3;i<=n;i++)
         dp[i]=dp[i-1]+dp[i-2];
        
        return dp[n];
    }
};

sqrt(x)
I had to take help for this solution from chatGPT and youtube but in the end I got the concept

class Solution {
public:
    int mySqrt(int x) {
        if (x == 0 || x == 1) {
            return x;  // Base case for 0 and 1
        }

        int left = 1;   // Minimum possible root
        int right = x;  // Maximum possible root
        int result = 0;

        while (left <= right) {
            int mid = left + (right - left) / 2;

            if (mid <= x / mid) {
                result = mid;  // Update result when mid is valid
                left = mid + 1;  // Move to the right half
            } else {
                right = mid - 1;  // Move to the left half
            }
        }

        return result;
    }
};